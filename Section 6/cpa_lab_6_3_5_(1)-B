#include <iostream>
#include <vector>
using namespace std;

class polymorfDraw{

public:
	virtual void Draw(){
		for (int i = 0; i < 4; i++)
		{
			if (i == 0)
			{
				cout << " ";
			}
			else if (i == 1)
			{
				cout << "/";
			}
			else if (i == 2)
			{
				cout << "\\";
			}
			else
			{
				cout << " " << endl;
			}

		}
	}
};

class LineDraw : public polymorfDraw
{
	void Draw() override
	{
		polymorfDraw::Draw();
		for (int i = 4; i < 8; i++)
		{
			if (i == 4 || i == 5)
			{
				cout << "/";
			}
			else if (i == 6)
			{
				cout << "\\";
			}
			else
			{
				cout << "\\" << endl;
			}
		}
	}
};

class StarDraw : public polymorfDraw
{
	void Draw() override
	{
		polymorfDraw::Draw();
		for (int i = 4; i < 8; i++)
		{
			if (i == 4)
			{
				cout << "/";
			}
			else if (i == 5 || i == 6)
			{
				cout << "*";
			}
			else
			{
				cout << "\\" << endl;
			}
		}
	}
};

class PlusDraw : public polymorfDraw
{
	void Draw() override
	{
		polymorfDraw::Draw();
		for (int i = 4; i < 8; i++)
		{
			if (i == 4)
			{
				cout << "/";
			}
			else if (i == 5 || i == 6)
			{
				cout << "+";
			}
			else
			{
				cout << "\\" << endl;
			}
		}
	}
};


int main()
{
    polymorfDraw * pd1 = new LineDraw();
    polymorfDraw * pd2 = new StarDraw();
    polymorfDraw * pd3 = new PlusDraw();
    
    vector<polymorfDraw*> draw_1_2_3;
    
    draw_1_2_3.push_back(pd1);
    draw_1_2_3.push_back(pd2);
    draw_1_2_3.push_back(pd3);
    
    for (int i = 0; i < draw_1_2_3.size(); i++) { 
        cout << "Drawing " << 1+i << ":\n";
        draw_1_2_3[i]->Draw();
    }
    return 0;
}
